<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CMR Technical Campus - Faculty Schedule</title>
  <!-- Tailwind CSS via CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Google Fonts for Inter -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- PapaParse for CSV parsing -->
  <script src="https://unpkg.com/papaparse@5.4.1/papaparse.min.js"></script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    table thead th {
      position: sticky;
      top: 0;
      background-color: #fef3c7;
      z-index: 10;
    }
    table tbody tr:hover {
      background-color: #fff7ed;
    }
    button:focus, a:focus, select:focus, input:focus {
      outline: 2px solid #f97316;
      outline-offset: 2px;
    }
    #faculty-list, #search-section {
      transition: opacity 0.3s ease-in-out;
    }
    #faculty-list.hidden, #search-section.hidden {
      opacity: 0;
      display: none;
    }
    button, a:not(#back-to-list) {
      transition: transform 0.2s ease-in-out;
    }
    button:hover, a:not(#back-to-list):hover {
      transform: scale(1.05);
    }
    /* Mobile-specific styles */
    @media (max-width: 640px) {
      .hide-on-mobile {
        display: none;
      }
      #search-section {
        padding: 1rem; /* Reduced padding for mobile */
      }
      #search-section select, #search-section input {
        font-size: 0.9rem; /* Smaller font for dropdowns */
        padding: 0.5rem; /* Reduced padding */
      }
      #search-section .grid {
        gap: 0.5rem; /* Tighter gap for form fields */
      }
      #search-section .flex {
        flex-direction: column; /* Stack buttons vertically */
        gap: 0.5rem; /* Space between buttons */
      }
      #search-section button {
        width: 100%; /* Full-width buttons for touch accessibility */
        padding: 0.75rem; /* Larger tap targets */
      }
      #search-section #search-button {
        padding: 0.5rem; /* Reduced padding for Search button */
      }
      #search-result {
        max-height: 50vh; /* Limit height to avoid overflow */
        overflow-y: auto; /* Scrollable results */
      }
    }
  </style>
</head>
<body class="bg-gray-50 flex flex-col min-h-screen">
  <!-- Header -->
  <header class="bg-gradient-to-r from-orange-500 to-orange-700 text-white py-6 shadow-md">
    <div class="flex flex-col items-center justify-center space-y-4 md:flex-row md:space-y-0 md:space-x-6 container mx-auto">
      <img src="cmr-logo.png" alt="CMR Technical Campus Logo" class="h-16 w-auto" width="150" height="50" onerror="this.src='https://via.placeholder.com/150x50?text=CMR+Logo'">
      <h1 class="text-3xl font-bold tracking-tight text-center">CMR Technical Campus</h1>
    </div>
  </header>

  <!-- Main content -->
  <main class="container mx-auto p-6 flex-grow">
    <!-- Loading message with spinner -->
    <div id="loading" class="text-center text-gray-800 text-lg flex items-center justify-center space-x-2">
      <svg class="animate-spin h-5 w-5 text-orange-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      <span>Loading faculty data...</span>
    </div>

    <!-- Faculty list section -->
    <section id="faculty-list" class="hidden my-8 bg-white p-6 rounded-lg shadow-md border border-gray-200">
      <h2 class="text-2xl font-semibold mb-6 text-gray-800">Faculty List</h2>
      <input type="text" id="faculty-filter" class="mb-4 w-full border border-gray-300 rounded-lg p-2 focus:ring-orange-500 focus:border-orange-500" placeholder="Search faculty by name or ID" aria-label="Filter faculty by name or ID">
      <div class="overflow-x-auto">
        <table class="min-w-full border-collapse border border-gray-200 bg-white rounded-lg">
          <thead>
            <tr class="bg-orange-100">
              <th class="border border-gray-200 p-4 text-left text-gray-800 font-medium min-w-[150px]">Faculty ID</th>
              <th class="border border-gray-200 p-4 text-left text-gray-800 font-medium min-w-[200px]">Name</th>
              <th class="border border-gray-200 p-4 text-left text-gray-800 font-medium min-w-[150px]">Phone Number</th>
              <th class="border border-gray-200 p-4 text-left text-gray-800 font-medium min-w-[150px] hide-on-mobile">Cabin Address</th>
            </tr>
          </thead>
          <tbody id="faculty-table-body" class="text-gray-800"></tbody>
        </table>
      </div>
      <a href="#" id="go-to-search" class="mt-6 inline-block bg-teal-500 text-white py-3 px-6 rounded-lg hover:bg-teal-600 transition duration-300" aria-label="Go to faculty search page">Go to Search Page</a>
    </section>

    <!-- Search section -->
    <section id="search-section" class="hidden my-8 bg-white p-6 rounded-lg shadow-md border border-gray-200">
      <h2 class="text-2xl font-semibold mb-6 text-gray-800">Search Faculty Schedule</h2>
      <div class="grid grid-cols-1 gap-4">
        <div>
          <label for="faculty-select" class="block text-sm font-medium text-gray-800">Select Faculty:</label>
          <select id="faculty-select" class="mt-1 block w-full border border-gray-300 rounded-lg p-2 focus:ring-orange-500 focus:border-orange-500" aria-required="true">
            <option value="">Select a faculty</option>
          </select>
        </div>
        <div>
          <label for="day-select" class="block text-sm font-medium text-gray-800">Select Day:</label>
          <select id="day-select" class="mt-1 block w-full border border-gray-300 rounded-lg p-2 focus:ring-orange-500 focus:border-orange-500" aria-required="true">
            <option value="">Select a day</option>
            <option value="MONDAY">MONDAY</option>
            <option value="TUESDAY">TUESDAY</option>
            <option value="WEDNESDAY">WEDNESDAY</option>
            <option value="THURSDAY">THURSDAY</option>
            <option value="FRIDAY">FRIDAY</option>
            <option value="SATURDAY">SATURDAY</option>
          </select>
        </div>
        <div>
          <label for="period-select" class="block text-sm font-medium text-gray-800">Select Period:</label>
          <select id="period-select" class="mt-1 block w-full border border-gray-300 rounded-lg p-2 focus:ring-orange-500 focus:border-orange-500" aria-required="true">
            <option value="">Select a period</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
          </select>
        </div>
      </div>
      <div class="mt-6 flex space-x-2">
        <button id="search-button" class="bg-teal-500 text-white py-3 px-6 rounded-lg hover:bg-teal-600 transition duration-300 flex items-center justify-center" aria-label="Search faculty schedule">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
          Search
        </button>
        <button id="show-all-button" class="bg-teal-500 text-white py-3 px-6 rounded-lg hover:bg-teal-600 transition duration-300" aria-label="Show all schedules for selected faculty and day">Show All Schedules</button>
        <button id="clear-button" class="bg-gray-400 text-white py-3 px-6 rounded-lg hover:bg-gray-500 transition duration-300" aria-label="Clear search form">Clear</button>
      </div>
      <div id="search-result" class="mt-6 bg-white p-6 rounded-lg shadow-md border border-gray-200" aria-live="polite"></div>
      <a href="#" id="back-to-list" class="mt-6 inline-block bg-gray-500 text-white py-3 px-6 rounded-lg hover:bg-gray-600 transition duration-300" aria-label="Back to faculty list">ðŸ”™ Back to Faculty List</a>
    </section>

    <!-- Toast notification -->
    <div id="toast" class="hidden fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg" role="alert"></div>
  </main>

  <!-- Footer -->
  <footer class="bg-gradient-to-r from-orange-500 to-orange-700 text-white text-center py-6 w-full">
    <p>Â© CMR Technical Campus</p>
  </footer>

  <!-- JavaScript -->
  <script>
    // Embedded CSV data
    const csvData = `Faculty_id,Name,Week_Day,Period,Class,Room_Number,Subject,Phone,Cabin
F001,S. Kiran,MONDAY,1,II CSM A,119,Operating Systems,9704838922,Cabin Location
F001,S. Kiran,MONDAY,4,II CSM B,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,MONDAY,5,II CSM B,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,MONDAY,6,II CSM B,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,TUESDAY,1,II CSM C,130 & 132,NodeJs Lab,9704838922,Cabin Location
F001,S. Kiran,TUESDAY,2,II CSM C,130 & 132,NodeJs Lab,9704838922,Cabin Location
F001,S. Kiran,TUESDAY,4,II CSM B,120,Operating Systems,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,1,II CSM B,120,Operating Systems / Training,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,2,II CSM A B C D,NaN,Training,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,3,II CSM A B C D,NaN,Training,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,4,II CSM A,119,Operating Systems / Training,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,5,II CSM A B C D,NaN,Training,9704838922,Cabin Location
F001,S. Kiran,WEDNESDAY,6,II CSM A B C D,NaN,Training,9704838922,Cabin Location
F001,S. Kiran,THURSDAY,1,II CSM B,120,Operating Systems,9704838922,Cabin Location
F001,S. Kiran,THURSDAY,3,II CSM A,119,Operating Systems,9704838922,Cabin Location
F001,S. Kiran,FRIDAY,1,II CSM A,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,FRIDAY,2,II CSM A,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,FRIDAY,3,II CSM A,130 & 132,Operating Systems Lab,9704838922,Cabin Location
F001,S. Kiran,SATURDAY,2,II CSM B,120,Operating Systems,9704838922,Cabin Location
F001,S. Kiran,SATURDAY,5,II CSM A,119,Operating Systems,9704838922,Cabin Location
F002,Emma,MONDAY,1,IT A,103,SE,9876543221,Cabin Location
F002,Emma,MONDAY,2,IT B,104,SE Lab,9876543221,Cabin Location
F002,Emma,MONDAY,3,IT A,105,Data Structures,9876543221,Cabin Location
F002,Emma,WEDNESDAY,1,IT A,302,SE,9876543221,Cabin Location
F003,Ravi,TUESDAY,4,CSE B,206,Algorithms,9876543232,Cabin Location
F003,Ravi,TUESDAY,5,CSE A,207,Python,9876543232,Cabin Location
F003,Ravi,TUESDAY,6,CSE B,208,OS,9876543232,Cabin Location
F003,Ravi,THURSDAY,3,CSE A,405,Data Structures,9876543232,Cabin Location
F003,Ravi,FRIDAY,6,CSE B,508,OS,9876543232,Cabin Location
F004,Anjali,MONDAY,1,IT A,107,Python,9876543243,Cabin Location
F004,Anjali,THURSDAY,2,IT B,405,SE Lab,9876543243,Cabin Location
F004,Anjali,THURSDAY,3,IT A,406,Data Structures,9876543243,Cabin Location
F004,Anjali,THURSDAY,4,IT B,407,Algorithms,9876543243,Cabin Location
F004,Anjali,FRIDAY,6,IT B,507,SE Lab,9876543243,Cabin Location`;

    // Initialize variables
    let facultyData = [];
    let currentView = 'faculty-list';

    // Show toast notification
    function showToast(message, type = 'success') {
      const toast = document.getElementById('toast');
      toast.classList.remove('hidden', 'bg-green-500', 'bg-red-500');
      toast.classList.add(type === 'success' ? 'bg-green-500' : 'bg-red-500');
      toast.textContent = message;
      setTimeout(() => toast.classList.add('hidden'), 3000);
    }

    // Load CSV data
    function loadData() {
      // Check localStorage for cached data
      try {
        const cachedData = localStorage.getItem('facultyData');
        if (cachedData) {
          facultyData = JSON.parse(cachedData);
          if (Array.isArray(facultyData) && facultyData.length > 0) {
            document.getElementById('loading').classList.add('hidden');
            showFacultyList();
            showToast('Faculty data loaded from cache.');
            return;
          }
        }
      } catch (e) {
        console.error('Error parsing localStorage data:', e);
        localStorage.removeItem('facultyData'); // Clear corrupted data
      }

      // Ensure PapaParse is available
      if (!window.Papa) {
        document.getElementById('loading').innerHTML = '<p class="text-red-500">Failed to load PapaParse library. Please try again later.</p>';
        showToast('Failed to load PapaParse library.', 'error');
        return;
      }

      Papa.parse(csvData, {
        header: true,
        skipEmptyLines: true,
        transformHeader: header => header.trim().replace(/^"|"$/g, ''),
        transform: value => value.trim().replace(/^"|"$/g, ''),
        complete: results => {
          facultyData = results.data.filter(row => row['Faculty_id'] && row['Name']); // Validate data
          if (facultyData.length === 0) {
            document.getElementById('loading').innerHTML = '<p class="text-red-500">No valid faculty data found.</p>';
            showToast('No valid faculty data found.', 'error');
            return;
          }
          try {
            localStorage.setItem('facultyData', JSON.stringify(facultyData));
          } catch (e) {
            console.error('Error saving to localStorage:', e);
          }
          document.getElementById('loading').classList.add('hidden');
          showFacultyList();
          showToast('Faculty data loaded successfully.');
        },
        error: err => {
          console.error('Error parsing CSV:', err);
          document.getElementById('loading').innerHTML = '<p class="text-red-500">Failed to load faculty data. Please try again later.</p>';
          showToast('Failed to load faculty data.', 'error');
        }
      });
    }

    // Display faculty list
    function showFacultyList() {
      const facultyList = [...new Map(facultyData.map(item => [item['Faculty_id'], item])).values()];
      const tableBody = document.getElementById('faculty-table-body');
      tableBody.innerHTML = '';
      facultyList.forEach(faculty => {
        const row = document.createElement('tr');
        row.classList.add('odd:bg-gray-50');
        row.innerHTML = `
          <td class="border border-gray-200 p-4">${faculty['Faculty_id'] || 'N/A'}</td>
          <td class="border border-gray-200 p-4">${faculty['Name'] || 'N/A'}</td>
          <td class="border border-gray-200 p-4">${faculty['Phone'] || 'N/A'}</td>
          <td class="border border-gray-200 p-4 hide-on-mobile">${faculty['Cabin'] || 'N/A'}</td>
        `;
        tableBody.appendChild(row);
      });

      // Populate faculty dropdown
      const facultySelect = document.getElementById('faculty-select');
      facultySelect.innerHTML = '<option value="">Select a faculty</option>';
      facultyList.forEach(faculty => {
        const option = document.createElement('option');
        option.value = faculty['Faculty_id'];
        option.textContent = `${faculty['Name']} (${faculty['Faculty_id']})`;
        facultySelect.appendChild(option);
      });

      // Show faculty list section
      document.getElementById('faculty-list').classList.remove('hidden');
      document.getElementById('search-section').classList.add('hidden');
      currentView = 'faculty-list';
    }

    // Switch to search view
    function showSearch() {
      document.getElementById('faculty-list').classList.add('hidden');
      document.getElementById('search-section').classList.remove('hidden');
      document.getElementById('search-result').innerHTML = '';
      currentView = 'search';
    }

    // Perform single schedule search
    function performSearch() {
      const facultyId = document.getElementById('faculty-select').value;
      const day = document.getElementById('day-select').value;
      const period = document.getElementById('period-select').value;
      const resultDiv = document.getElementById('search-result');

      if (!facultyId || !day || !period) {
        resultDiv.innerHTML = '<p class="text-red-500">Please select all fields.</p>';
        showToast('Please select all fields.', 'error');
        return;
      }

      const match = facultyData.find(row =>
        row['Faculty_id'] === facultyId &&
        row['Week_Day'] === day &&
        row['Period'] === period
      );

      if (match) {
        resultDiv.innerHTML = `
          <div class="flex items-center space-x-2">
            <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <div>
              <p class="text-gray-800"><strong>Name:</strong> ${match['Name'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Day:</strong> ${match['Week_Day'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Period:</strong> ${match['Period'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Class:</strong> ${match['Class'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Room No.:</strong> ${match['Room_Number'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Subject:</strong> ${match['Subject'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Phone Number:</strong> ${match['Phone'] || 'N/A'}</p>
              <p class="text-gray-800"><strong>Cabin:</strong> ${match['Cabin'] || 'N/A'}</p>
            </div>
          </div>
        `;
        showToast('Schedule found!');
      } else {
        const faculty = facultyData.find(row => row['Faculty_id'] === facultyId);
        resultDiv.innerHTML = `
          <div class="flex items-center space-x-2">
            <svg class="w-5 h-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
            <div>
              <p class="text-red-500">No schedule found for ${faculty ? faculty['Name'] : 'selected faculty'} on ${day}, Period ${period}.</p>
              <p class="text-gray-800"><strong>Cabin:</strong> ${faculty ? faculty['Cabin'] || 'N/A' : 'N/A'}</p>
            </div>
          </div>
        `;
        showToast('No schedule found.', 'error');
      }
    }

    // Show all schedules for selected faculty and optionally a specific day
    function showAllSchedules() {
      const facultyId = document.getElementById('faculty-select').value;
      const day = document.getElementById('day-select').value;
      const resultDiv = document.getElementById('search-result');

      if (!facultyId) {
        resultDiv.innerHTML = '<p class="text-red-500">Please select a faculty.</p>';
        showToast('Please select a faculty.', 'error');
        return;
      }

      const faculty = facultyData.find(row => row['Faculty_id'] === facultyId);
      let matches;
      let message;
      if (day) {
        matches = facultyData.filter(row => row['Faculty_id'] === facultyId && row['Week_Day'] === day);
        message = `Found ${matches.length} schedule(s) for ${faculty ? faculty['Name'] : 'selected faculty'} on ${day}.`;
      } else {
        matches = facultyData.filter(row => row['Faculty_id'] === facultyId);
        message = `Found ${matches.length} schedule(s) for ${faculty ? faculty['Name'] : 'selected faculty'}.`;
      }

      if (matches.length > 0) {
        let html = '<div class="space-y-4">';
        matches.forEach(match => {
          html += `
            <div class="flex items-center space-x-2 border-b border-gray-200 pb-2">
              <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <div>
                <p class="text-gray-800"><strong>Name:</strong> ${match['Name'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Day:</strong> ${match['Week_Day'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Period:</strong> ${match['Period'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Class:</strong> ${match['Class'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Room No.:</strong> ${match['Room_Number'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Subject:</strong> ${match['Subject'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Phone Number:</strong> ${match['Phone'] || 'N/A'}</p>
                <p class="text-gray-800"><strong>Cabin:</strong> ${match['Cabin'] || 'N/A'}</p>
              </div>
            </div>
          `;
        });
        html += '</div>';
        resultDiv.innerHTML = html;
        showToast(message);
      } else {
        resultDiv.innerHTML = `
          <div class="flex items-center space-x-2">
            <svg class="w-5 h-5 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
            <div>
              <p class="text-red-500">No schedules found for ${faculty ? faculty['Name'] : 'selected faculty'}${day ? ` on ${day}` : ''}.</p>
              <p class="text-gray-800"><strong>Cabin:</strong> ${faculty ? faculty['Cabin'] || 'N/A' : 'N/A'}</p>
            </div>
          </div>
        `;
        showToast(`No schedules found${day ? ` for ${day}` : ''}.`, 'error');
      }
    }

    // Filter faculty list
    function filterFacultyList() {
      const filter = document.getElementById('faculty-filter').value.toLowerCase();
      const rows = document.querySelectorAll('#faculty-table-body tr');
      const facultySelect = document.getElementById('faculty-select');
      const options = facultySelect.querySelectorAll('option:not(:first-child)');
      rows.forEach(row => {
        const id = row.cells[0].textContent.toLowerCase();
        const name = row.cells[1].textContent.toLowerCase();
        row.style.display = id.includes(filter) || name.includes(filter) ? '' : 'none';
      });
      options.forEach(option => {
        const text = option.textContent.toLowerCase();
        option.style.display = text.includes(filter) ? '' : 'none';
      });
    }

    // Event listeners
    document.getElementById('go-to-search').addEventListener('click', e => {
      e.preventDefault();
      showSearch();
    });
    document.getElementById('back-to-list').addEventListener('click', e => {
      e.preventDefault();
      showFacultyList();
    });
    document.getElementById('search-button').addEventListener('click', performSearch);
    document.getElementById('show-all-button').addEventListener('click', showAllSchedules);
    document.getElementById('clear-button').addEventListener('click', () => {
      document.getElementById('faculty-select').value = '';
      document.getElementById('day-select').value = '';
      document.getElementById('period-select').value = '';
      document.getElementById('search-result').innerHTML = '';
      showToast('Form cleared.');
    });
    document.getElementById('faculty-filter').addEventListener('input', filterFacultyList);

    // Initialize the app after all scripts are loaded
    window.onload = () => {
      loadData();
    };
  </script>
</body>
</html>